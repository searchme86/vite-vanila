{"version":3,"file":"products-XIuSJjIx.js","sources":["../../../src/utils/render.js","../../../src/components/search.js","../../../src/components/companies.js","../../../src/views/products.js"],"sourcesContent":["/**\n * 의존 파일 :\n * products.js\n * itemTemplate.js\n *\n * 상품 페이지(products.html)에 상품 레이아웃을 구성하고,\n * 유저가 카트 이미지 버튼 클릭 시, localStorage에 해당 아이템이 추가되는 init 스크립트\n */\n\nimport {createProductItem} from \"./itemTemplate\";\nimport {addToCart} from \"../components/cart/updateCart\";\n\nexport const addItemsToContainer = (items, container, filters) => {\n  container.innerHTML = items.map(createProductItem).join(\"\");\n\n  if (filters) return;\n\n  // 유저가 카트 이미지 버튼 클릭 시, localStorage에 해당 아이템이 추가되는 init 스크립트\n  const handleAddToCartClick = (event) => {\n    const target = event.target.closest(\".button__add-cart\");\n    if (target) {\n      const productId = target.dataset.id;\n      addToCart(productId);\n    }\n  };\n\n  container.addEventListener(\"click\", handleAddToCartClick);\n};\n","/**\n * 상품 페이지(products.html)에서,\n * 상품 검색 스크립트\n */\n\nimport {inputformElem, nameInput} from \"../utils/cartElemDom.js\";\nimport {addItemsToContainer} from \"../utils/render.js\";\nimport {productContainer} from \"../utils/cartElemDom.js\";\n\nconst renderSearchComponent = (store) => {\n  const filterProductsByName = (value) =>\n    store.filter((product) => product.title.toLowerCase().startsWith(value));\n\n  const displayFilterError = (container) => {\n    container.innerHTML = `<strong class=\"filter-error\">검색결과가 존재하지 않습니다.</strong>`;\n  };\n\n  const displayFilteredProducts = (newStore) => {\n    if (newStore.length < 1) {\n      displayFilterError(productContainer);\n    } else {\n      addItemsToContainer(newStore, productContainer);\n    }\n  };\n\n  inputformElem.addEventListener(\"keyup\", () => {\n    const value = nameInput.value.toLowerCase();\n    const newStore = value ? filterProductsByName(value) : store;\n    displayFilteredProducts(newStore);\n  });\n};\n\nexport default renderSearchComponent;\n","/**\n * 상품 페이지(products.html)에서,\n * 카테고리 별로 생성 된 메뉴를 만드는 스크립트\n * 해당 텍스트 클릭 시, 해당 메뉴 필터링\n */\n\nimport {addItemsToContainer} from \"../utils/render.js\";\nimport {companiesDOM, productContainer} from \"../utils/cartElemDom.js\";\n\nconst filterStoreByCompany = (category, store) => {\n  return category === \"all\"\n    ? [...store]\n    : store.filter((product) => product.category === category);\n};\n\nconst getAllUniqueCompanies = (store) => {\n  return [\"all\", ...new Set(store.map((product) => product.category))];\n};\n\nconst renderCompanyButtons = (categories) => {\n  const createCompanyList = (category) => {\n    return /*html*/ `\n      <li role=\"presentation\" class=\"list-item__company\">\n        <button type=\"button\" class=\"button__item-company\" aria-pressed=\"false\" tabindex=\"-1\">${category}</button>\n      </li>\n    `;\n  };\n  companiesDOM.innerHTML = categories.map(createCompanyList).join(\"\");\n};\n\nconst handleCompanyButtonClick = (event, store) => {\n  const element = event.target;\n  const items = document.querySelectorAll(\".list-item__company\");\n\n  items.forEach((item) => {\n    const menuButton = item.children[0];\n    menuButton.setAttribute(\"aria-pressed\", \"false\");\n    menuButton.setAttribute(\"tabindex\", \"-1\");\n    item.classList.remove(\"active\");\n  });\n\n  element.parentElement.classList.add(\"active\");\n  element.setAttribute(\"aria-pressed\", \"true\");\n  element.setAttribute(\"tabindex\", \"0\");\n\n  if (element.classList.contains(\"button__item-company\")) {\n    addItemsToContainer(\n      filterStoreByCompany(element.textContent, store),\n      productContainer,\n    );\n  }\n};\n\nconst addCompanyButtonClickHandler = (store) => {\n  companiesDOM.addEventListener(\"click\", (e) =>\n    handleCompanyButtonClick(e, store),\n  );\n};\n\nexport const renderCompanyComponent = (store) => {\n  const companies = getAllUniqueCompanies(store);\n  renderCompanyButtons(companies);\n  addCompanyButtonClickHandler(store);\n};\n","import \"../assets/style/components/header.scss\";\nimport \"../assets/style/components/footer.scss\";\nimport \"../assets/style/pages/products.scss\";\nimport \"../assets/style/media/headerMedia.scss\";\nimport \"../assets/style/media/productsMedia.scss\";\nimport \"../assets/style/media/footerMedia.scss\";\n\nimport \"../components/cart/toggleCart\";\nimport \"../components/cart/updateCart\";\n\nimport \"../components/bannerSlider\";\nimport \"../components/homeSearch\";\nimport \"../components/homeAccordion\";\nimport \"../components/homeSideBar\";\n\nimport {productContainer} from \"../utils/cartElemDom\";\nimport {fetchProducts} from \"../api/fetchProducts\";\nimport {storeState, setStoreState} from \"../store/store\";\nimport {addItemsToContainer} from \"../utils/render\";\nimport renderSearchComponent from \"../components/search\";\nimport {renderCompanyComponent} from \"../components/companies\";\n\nconst initializeApp = async () => {\n  if (storeState.length < 1) {\n    const products = await fetchProducts();\n    setStoreState(products);\n  }\n  addItemsToContainer(storeState, productContainer);\n  renderSearchComponent(storeState);\n  renderCompanyComponent(storeState);\n};\n\ninitializeApp();\n"],"names":["addItemsToContainer","items","container","filters","innerHTML","map","createProductItem","join","addEventListener","event","target","closest","productId","dataset","id","addToCart","renderSearchComponent","store","inputformElem","value","nameInput","toLowerCase","newStore","filter","product","title","startsWith","length","productContainer","addCompanyButtonClickHandler","companiesDOM","e","element","document","querySelectorAll","forEach","item","menuButton","children","setAttribute","classList","remove","parentElement","add","contains","category","textContent","renderCompanyComponent","companies","Set","getAllUniqueCompanies","categories","storeState","products","fetchProducts","setStoreState","initializeApp"],"mappings":"gNAYO,MAAMA,EAAsB,CAACC,EAAOC,EAAWC,IAGpD,CAFAD,EAAUE,UAAYH,EAAMI,IAAIC,CAAAA,EAAmBC,KAAK,EAAA,EAEpDJ,CAAAA,GAWJD,EAAUM,iBAAiB,QARGC,GAC5B,CAAA,MAAMC,EAASD,EAAMC,OAAOC,QAAQ,mBAAA,EACpC,GAAID,EAAQ,CACV,MAAME,EAAYF,EAAOG,QAAQC,GACjCC,EAAUH,EACX,CAGsD,CAAA,CAAA,ECjBrDI,EAAyBC,GAAAA,CAgB7BC,EAAcV,iBAAiB,QAAS,IACtC,CAAA,MAAMW,EAAQC,EAAUD,MAAME,YAAAA,EACxBC,EAAWH,GAjBWA,GAC5BF,EAAMM,OAAQC,GAAYA,EAAQC,MAAMJ,YAAAA,EAAcK,WAAWP,CAAAA,CAAAA,GAgBnBA,CAAAA,EAASF,GAVxBK,GAAAA,CAC3BA,EAASK,OAAS,EACDC,EALXxB,UAAY,yDAOpBJ,EAAoBsB,EAAUM,CAAAA,CAC/B,GAMuBN,EAAS,CACjC,CAAA,ECwBEO,EAAgCZ,GAAAA,CACpCa,EAAatB,iBAAiB,QAAUuB,IAxBT,CAACtB,EAAOQ,IAAAA,CACvC,MAAMe,EAAUvB,EAAMC,OACRuB,SAASC,iBAAiB,qBAAA,EAElCC,QAASC,GAAAA,CACb,MAAMC,EAAaD,EAAKE,SAAS,CAAA,EACjCD,EAAWE,aAAa,eAAgB,OACxCF,EAAAA,EAAWE,aAAa,WAAY,IACpCH,EAAAA,EAAKI,UAAUC,OAAO,QAAA,CAAS,CAGjCT,EAAAA,EAAQU,cAAcF,UAAUG,IAAI,QACpCX,EAAAA,EAAQO,aAAa,eAAgB,MACrCP,EAAAA,EAAQO,aAAa,WAAY,GAAA,EAE7BP,EAAQQ,UAAUI,SAAS,sBAAA,GAC7B5C,GArC0B6C,CAAAA,EAAU5B,IAC/B4B,IAAa,MAChB,CAAA,GAAI5B,GACJA,EAAMM,OAAQC,GAAYA,EAAQqB,WAAaA,CAAAA,GAmC1Bb,EAAQc,YAAa7B,CAC1CW,EAAAA,CAAAA,CAEH,GAK0BG,EAAGd,CAC7B,CAAA,CAAA,EAGU8B,EAA0B9B,GAAAA,CACrC,MAAM+B,GA7CuB/B,GACtB,CAAC,MAAU,GAAA,IAAIgC,IAAIhC,EAAMZ,IAAKmB,GAAYA,EAAQqB,QA4CvCK,CAAAA,CAAAA,GAAsBjC,CAzCb,EAAA,IAACkC,IA0CPH,EAlCrBlB,EAAa1B,UAAY+C,EAAW9C,IAPTwC,GACT;AAAA;AAAA,gGAE4EA,CAInCtC;AAAAA;AAAAA,KAAAA,EAAAA,KAAK,EAmChEsB,EAAAA,EAA6BZ,CAAM,CAAA,aCvCnC,GAAImC,EAAWzB,OAAS,EAAG,CACzB,MAAM0B,QAAiBC,EACvBC,EAAAA,EAAcF,CACf,CAAA,CACDrD,EAAoBoD,EAAYxB,GAChCZ,EAAsBoC,CAAAA,EACtBL,EAAuBK,CAAAA,CAAW,GAGpCI"}